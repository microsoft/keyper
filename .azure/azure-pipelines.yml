
jobs:

- job: 'Test'
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      Python39:
        python.version: '3.9'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: curl -sSL https://install.python-poetry.org | python3 -
    displayName: Install Poetry

  - script: python -m venv $(System.DefaultWorkingDirectory)
    displayName: Create virtual environment

  - script: |
      source bin/activate
      $HOME/.local/bin/poetry install
    displayName: 'Install dependencies'

  - script: |
      source bin/activate
      python -m pylint --rcfile=pylintrc protool
      python -m pylint --rcfile=pylintrc tests
    displayName: 'Lint'

  - script: |
      source bin/activate
      python -m mypy --ignore-missing-imports protool/
      python -m mypy --ignore-missing-imports tests/
    displayName: 'Type Check'

  - script: |
      source bin/activate
      python -m pytest tests --cov=keyper --cov-report html --cov-report xml --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - script: |
      source bin/activate
      python inlinecss.py htmlcov
    displayName: 'Inline CSS'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

  # Publish Code Coverage Results
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage.xml
      reportDirectory: $(System.DefaultWorkingDirectory)/htmlcov
